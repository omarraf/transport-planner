name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Frontend CI
  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'

    - name: Install dependencies
      run: npm ci

    # - name: Run ESLint
    #   run: npm run lint

    - name: Type check
      run: npx tsc --noEmit

    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_MAPBOX_TOKEN: ${{ secrets.NEXT_PUBLIC_MAPBOX_TOKEN }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/.next/

  # Backend CI
  backend:
    name: Backend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint
      continue-on-error: true # Backend might not have lint script

    - name: Type check
      run: npx tsc --noEmit

    - name: Build application
      run: npm run build

    - name: Run tests
      run: npm test
      continue-on-error: true # Tests might not be set up yet

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: backend/dist/

  # Security and Quality Checks
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run npm audit (Frontend)
      working-directory: ./frontend
      run: |
        npm ci
        npm audit --audit-level=high
      continue-on-error: true

    - name: Run npm audit (Backend)
      working-directory: ./backend
      run: |
        npm ci
        npm audit --audit-level=high
      continue-on-error: true

  # Docker Build Test (for Railway deployment validation)
  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [backend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: false
        tags: transport-planner-backend:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # Deployment Status Check
  deployment-check:
    name: Check Deployments
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Check Vercel Deployment
      run: |
        echo "✅ Frontend will be deployed to Vercel automatically"
        echo "🔗 URL: https://transport-planner-ruddy.vercel.app"

    - name: Check Railway Deployment  
      run: |
        echo "✅ Backend will be deployed to Railway automatically"
        echo "🔗 URL: https://transport-planner-production.up.railway.app"

    - name: Validate deployments
      run: |
        # Wait a bit for deployments to complete
        sleep 30
        
        # Check if frontend is responding
        if curl -f -s "https://transport-planner-ruddy.vercel.app" > /dev/null; then
          echo "✅ Frontend deployment is live"
        else
          echo "❌ Frontend deployment check failed"
          exit 1
        fi
        
        # Check if backend health endpoint is responding
        if curl -f -s "https://transport-planner-production.up.railway.app/health" > /dev/null; then
          echo "✅ Backend deployment is live"
        else
          echo "❌ Backend deployment check failed"
          exit 1
        fi